---
import Section from '../components/Section.astro';
import { 
  CodeFrame,
  ProgressDots,
  IntroHero,
  ProgressRail,
  SectionBackground,
  ModernGradientBackground,
  PresentationCard,
  VideoCard
} from '../components';
import { modules } from '../data/modules';
import '../styles/globals.css';
// Carga perezosa del código fuente crudo desde src/code/*.py
// Nota: import.meta.glob necesita rutas relativas al archivo actual
// Mapeo: '/src/code/archivo.py' -> contenido raw
const codeFiles = import.meta.glob('../code/*', { eager: true, query: '?raw', import: 'default' }) as Record<string, string>;
const getCode = (codeFile?: string) => {
  if (!codeFile) return undefined;
  // codeFile viene como '/src/code/xxx.py'; la clave en glob es '../code/xxx.py'
  const key = codeFile.replace('/src/', '../');
  return codeFiles[key];
};
---

<html lang="es">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Portfolio — Programación con IA Generativa (UP)</title>
    <meta name="description" content="Portfolio interactivo de la materia Programación con IA Generativa — Universidad de Palermo." />
    <link rel="icon" href="/favicon.svg" />
    <link rel="stylesheet" href="https://unpkg.com/prismjs@1.29.0/themes/prism-tomorrow.min.css" />
  </head>
  <body>
    <ModernGradientBackground client:load />
    <main class="main">
      <ProgressRail client:load labels={modules.map(m => m.title)} accents={modules.map(m => m.accent || '#fff')} />

      {/* Intro hero (sección 0) */}
  <IntroHero client:load title={modules[0].title} subtitle={modules[0].subtitle} videoSrc={modules[0].videoPlaceholder} />

      {/* Resto de secciones */}
      {modules.slice(1).map((m, idx) => (
        <Section index={idx+1} title={m.title} subtitle={m.subtitle}>
          <Fragment slot="background"><SectionBackground client:load accent={m.accent} /></Fragment>
          <div class="grid two">
            <VideoCard client:load src={m.videoPlaceholder} title={m.title} />

            <CodeFrame
              client:load
              title="Código / Input del ejemplo"
              placeholder={m.codePlaceholder}
              code={getCode(m.codeFile)}
              language={m.codeLanguage || 'tsx'}
              blurOverlay={m.id === 'cierre' ? { enabled: true, href: 'https://github.com/Yago-Zaragoza-04/Portfolio-Programaci-n-con-IA-Generativa', label: 'Abrir repositorio en GitHub', iconSrc: '/favicon.svg' } : undefined}
            />
            {m.presentationPlaceholder && (
              <PresentationCard client:load src={m.presentationPlaceholder} title={m.title} />
            )}
          </div>
        </Section>
      ))}

      <footer class="footer">
        <p>Universidad de Palermo — Programación con IA Generativa • Portfolio creado con <a class="link" href="https://github.com/features/copilot" target="_blank" rel="noreferrer">GitHub Copilot</a> y Astro + React.</p>
      </footer>
    </main>
  </body>
</html>
